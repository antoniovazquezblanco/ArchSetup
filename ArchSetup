#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# This file is part of ArchSetup.
#
# ArchSetup is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# ArchSetup is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with ArchSetup.  If not, see <http://www.gnu.org/licenses/>.

import curses
from SetupTools import SetupTools

class ArchSetup:
    def __init__(self):
        self.setuptools = SetupTools()
        try:
            # Initialize curses
            self.screen = curses.initscr()
            # Turn off echoing of keys, and enter cbreak mode,
            # where no buffering is performed on keyboard input.
            curses.noecho()
            curses.cbreak()
            # In keypad mode, escape sequences for special keys
            # (like the cursor keys) will be interpreted and
            # a special value like curses.KEY_LEFT will be returned
            self.screen.keypad(1)
            # Enter the main loop...
            self._loop()
            # Set everything back to normal
            self.screen.keypad(0)
            curses.echo()
            curses.nocbreak()
            curses.endwin()
        except:
            # In event of error, restore terminal to sane state.
            self.screen.keypad(0)
            curses.echo()
            curses.nocbreak()
            curses.endwin()
            # Print the exception...
            traceback.print_exc()

    def _loop(self):
        self.screen.addstr("ArchSetup\n")
        while True:
            event = self.screen.getch()
            if event == ord("q"):
                break

if __name__ == "__main__":
	ArchSetup()
